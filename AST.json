{
	"type": "Program",
	"body": {
		"type": "BlockStatement",
		"body": [
			{
				"type": "FunctionDeclaration",
				"name": "show",
				"params": ["a", "b", "c"],
				"body": {
					"type": "BlockStatement",
					"body": [
						{
							"type": "ExpressionStatement",
							"expression": { "type": "CallExpression", "name": "print", "arguments": ["a", "b", "c"] }
						}
					]
				}
			},
			{
				"type": "VariableDeclaration",
				"declarations": [
					{ "id": "a", "init": "1" },
					{ "id": "b", "init": "2" },
					{ "id": "c", "init": "3" }
				],
				"kind": "let"
			},
			{
				"type": "WhileStatement",
				"condition": { "type": "BinaryExpression", "operation": ">", "left": "3", "right": "2" },
				"body": {
					"type": "BlockStatement",
					"body": [
						{
							"type": "IfStatement",
							"condition": { "type": "BinaryExpression", "operation": ">", "left": "b", "right": "a" },
							"consequent": {
								"type": "BlockStatement",
								"body": [
									{
										"type": "ExpressionStatement",
										"expression": {
											"type": "CallExpression",
											"name": "show",
											"arguments": [
												{ "type": "BinaryExpression", "operation": "+", "left": "a", "right": "b" },
												{ "type": "BinaryExpression", "operation": "+", "left": "c", "right": "a" },
												{
													"type": "BinaryExpression",
													"operation": "*",
													"left": "c",
													"right": { "type": "BinaryExpression", "operation": "*", "right": "c" }
												}
											]
										}
									}
								]
							},
							"alternate": {
								"type": "BlockStatement",
								"body": [
									{
										"type": "ExpressionStatement",
										"expression": {
											"type": "CallExpression",
											"name": "show",
											"arguments": [
												{ "type": "BinaryExpression", "operation": "+", "left": "a", "right": "b" },
												{ "type": "BinaryExpression", "operation": "+", "left": "c", "right": "a" },
												{
													"type": "BinaryExpression",
													"operation": "*",
													"left": "c",
													"right": { "type": "BinaryExpression", "operation": "*", "right": "c" }
												}
											]
										}
									}
								]
							}
						}
					]
				}
			}
		]
	}
}
